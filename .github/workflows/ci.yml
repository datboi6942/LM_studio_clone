name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        pip install poetry
        poetry --version
    
    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: poetry install --with dev
    
    - name: Run tests with coverage
      run: poetry run pytest -q
    
    - name: Check code formatting with Black
      run: poetry run black --check app tests
    
    - name: Lint with Ruff
      run: |
        poetry run ruff check app tests
        # Fail if ruff would make changes
        poetry run ruff check --fix --exit-zero app tests
        git diff --exit-code
    
    - name: Type check with mypy
      run: poetry run mypy app
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 